#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
 //
 // QWERTY
 // ,-----------------------------------------.                    ,----------------------------------------.
 // | ESC  |   1  |   2  |   3  |   4  |   5  |                   |   6  |   7  |   8  |   9  |   0  |  DEL |
 // |------+------+------+------+------+------|-------    --------|------+------+------+------+------+------|
 // | CAPS |   Q  |   W  |   E  |   R  |   T  |      |    |  +*   |   Y  |   U  |   I  |   O  |   P  | BSPC |
 // |------+------+------+------+------+------|-------    --------|------+------+------+------+------+------|
 // | Tab  |   A  |   S  |   D  |   F  |   G  |      |    |       |   H  |   J  |   K  |   L  |   Ñ  |  ´   |
 // |------+------+------+------+------+------|-------    --------|------+------+------+------+------+------|
 // |LShift|  <>  |   Z  |   X  |   C  |   V  |  :.  |    | ENTER |   B  |   N  |   M  |   -  |  UP  |  '?  |
 // |-----------------------------------------|-------    --------|-----------------------------------------|
 // | LCTR |  WIN | KC_NO| LALT |  ,;  |  SPC | HOME |    |  END  |  SPC |   {  |   }  | LEFT | DOWN | RIGHT|
 //  -------------------------------------------------    ---------------------------------------------------
 //


                        bindings = <
    &kp ESC        &kp N1      &kp N2      &kp N3      &kp N4     &kp N5                            &kp N6    &kp N7     &kp N8      &kp N9     &kp N0     &kp DEL
    &kp CAPS       &kp Q       &kp W       &kp E       &kp R      &kp T     &kp GRAVE     &kp RBRC  &kp Y     &kp U      &kp I       &kp O      &kp P      &kp BSPC
    &kp TAB        &kp A       &kp S       &kp D       &kp F      &kp G     &trans        &kp RALT  &kp H     &kp J      &kp K       &kp L      &kp SEMI   &kp LBRC
    &kp LSHFT      &kp NUBS    &kp Z       &kp X       &kp C      &kp V     &kp SPACE     &kp ENTER &kp B     &kp N      &kp M       &kp E      &kp UP     &kp MINUS
    &kp LCTRL      &trans      &kp LWIN    &kp LALT    &kp DOT    &kp COMMA &kp HOME      &kp END   &kp SPACE &kp LBKT   &kp RBKT    &kp LEFT   &kp DOWN   &kp RIGHT
                        >;
                };

        };



};



[_QWERTY] = LAYOUT(
  KC_ESC,    KC_1,                KC_2,        KC_3,     KC_4,    KC_5,                                                KC_6,     KC_7,    KC_8,    KC_9,      KC_0,     KC_DEL,
  KC_CAPS,   KC_Q,                KC_W,        KC_E,     KC_R,    KC_T,      KC_GRV,                       KC_RBRC,    KC_Y,     KC_U,    KC_I,    KC_O,      KC_P,     KC_BSPC,
  KC_TAB,    KC_A,                KC_S,        KC_D,     KC_F,    KC_G,      KC_NO,                        KC_ALGR,    KC_H,     KC_J,    KC_K,    KC_L,      KC_SCLN,  KC_LBRC,
  KC_LSFT,   KC_NONUS_BACKSLASH,  KC_Z,        KC_X,     KC_C,    KC_V,      KC_SPC,                       KC_ENT,     KC_B,     KC_N,    KC_M,    KC_SLSH,   KC_UP,    KC_MINUS,
  KC_LCTRL,  MO(_LOWER),          KC_LGUI,     KC_LALT,  KC_DOT, KC_COMM,    KC_HOME,                      KC_END,     KC_SPC,   KC_QUOT, KC_BSLS, KC_LEFT,   KC_DOWN,  KC_RIGHT 
),

